#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
%This preamble is designed to ensure that the document prints
% out as advertised. If you mess with this preamble,
% parts of the document may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

\usepackage{ifpdf} % part of the hyperref bundle
\ifpdf % if pdflatex is used
     % set fonts for nicer pdf view
     \IfFileExists{lmodern.sty}{\usepackage{lmodern}}{}
\fi % end if pdflatex is used

\usepackage{tikz}
\usetikzlibrary{mindmap}
\usepackage{attachfile2}
\usepackage{embedfile}
\usepackage{hypgotoe}
\usepackage{verbatim}
%\embedfile{Intro.pdf}
\usepackage{tocloft}
\renewcommand{\cftdot}{}
\usepackage{minitoc}
\definecolor{green}{RGB}{0, 180, 0}
\definecolor{cyan}{RGB}{0, 180, 180}
\definecolor{yellow}{RGB}{102,51,0}
\definecolor{bluekeywords}{rgb}{0.13,0.13,1}
\definecolor{greencomments}{rgb}{0,0.5,0}
\definecolor{redstrings}{rgb}{0.9,0,0}

\usepackage{listings}
\usepackage{courier}
\lstset{language=[Visual]C++,
showspaces=false,
showtabs=false,
breaklines=true,
showstringspaces=false,
breakatwhitespace=true,
escapeinside={(*@}{@*)},
commentstyle=\color{greencomments},
keywordstyle=\color{bluekeywords},
stringstyle=\color{redstrings},
basicstyle=\ttfamily,
tabsize=3
}

\lstloadlanguages{% Check Dokumentation for further languages ...
%[Visual]Basic
%Pascal
%C
C++,
%XML
%HTML
Java
}
%\DeclareCaptionFont{blue}{\color{blue}}

%\captionsetup[lstlisting]{singlelinecheck=false, labelfont={blue}, textfont={blue}}
\usepackage{caption}
\DeclareCaptionFont{white}{\color{white}}
\DeclareCaptionFormat{listing}{\colorbox[cmyk]{0.43, 0.35, 0.35,0.01}{\parbox{\textwidth}{\hspace{15pt}#1#2#3}}}
\captionsetup[lstlisting]{format=listing,labelfont=white,textfont=white, singlelinecheck=false, margin=0pt, font={bf,footnotesize}}

% Style definition file generated by highlight 3.13, http://www.andre-simon.de/

\begin{comment}
% Highlighting theme: Acid
\usepackage{marvosym}
\newcommand{\hlstd}[1]{\textcolor[rgb]{0,0,0}{#1}}
\newcommand{\hlnum}[1]{\textcolor[rgb]{0.5,0,0.5}{\bf{#1}}}
\newcommand{\hlesc}[1]{\textcolor[rgb]{1,0,1}{\bf{#1}}}
\newcommand{\hlstr}[1]{\textcolor[rgb]{0.65,0.52,0}{#1}}
\newcommand{\hlpps}[1]{\textcolor[rgb]{0,0,1}{#1}}
\newcommand{\hlslc}[1]{\textcolor[rgb]{0.95,0.47,0}{#1}}
\newcommand{\hlcom}[1]{\textcolor[rgb]{1,0.5,0}{#1}}
\newcommand{\hlppc}[1]{\textcolor[rgb]{0,0.5,0.75}{\bf{#1}}}
\newcommand{\hlopt}[1]{\textcolor[rgb]{1,0,0.5}{\bf{#1}}}
\newcommand{\hlipl}[1]{\textcolor[rgb]{0.62,0.36,1}{#1}}
\newcommand{\hllin}[1]{\textcolor[rgb]{0.19,0.19,0.19}{#1}}
\newcommand{\hlkwa}[1]{\textcolor[rgb]{0.73,0.47,0.47}{\bf{#1}}}
\newcommand{\hlkwb}[1]{\textcolor[rgb]{0.5,0.5,0.75}{\bf{#1}}}
\newcommand{\hlkwc}[1]{\textcolor[rgb]{0,0.5,0.75}{#1}}
\newcommand{\hlkwd}[1]{\textcolor[rgb]{0,0.27,0.4}{#1}}
\definecolor{bgcolor}{rgb}{0.93,0.93,0.93}
\end{comment}

% Highlighting theme: Visual Studio IDE
\newcommand{\hlstd}[1]{\textcolor[rgb]{0,0,0}{#1}}
\newcommand{\hlnum}[1]{\textcolor[rgb]{0,0,0}{#1}}
\newcommand{\hlesc}[1]{\textcolor[rgb]{0.64,0.08,0.08}{#1}}
\newcommand{\hlstr}[1]{\textcolor[rgb]{0.64,0.08,0.08}{#1}}
\newcommand{\hlpps}[1]{\textcolor[rgb]{0,0,1}{#1}}
\newcommand{\hlslc}[1]{\textcolor[rgb]{0,0.5,0}{#1}}
\newcommand{\hlcom}[1]{\textcolor[rgb]{0,0.5,0}{#1}}
\newcommand{\hlppc}[1]{\textcolor[rgb]{0,0,1}{#1}}
\newcommand{\hlopt}[1]{\textcolor[rgb]{0,0,0}{#1}}
\newcommand{\hlipl}[1]{\textcolor[rgb]{0.64,0.08,0.08}{#1}}
\newcommand{\hllin}[1]{\textcolor[rgb]{0.17,0.57,0.69}{#1}}
\newcommand{\hlkwa}[1]{\textcolor[rgb]{0,0,1}{#1}}
\newcommand{\hlkwb}[1]{\textcolor[rgb]{0,0,1}{#1}}
\newcommand{\hlkwc}[1]{\textcolor[rgb]{0.17,0.57,0.69}{#1}}
\newcommand{\hlkwd}[1]{\textcolor[rgb]{0,0,0}{#1}}
\definecolor{bgcolor}{rgb}{1,1,1}

\cftsetindents{part}{-0.325in}{0.25in}

\renewcommand\thesection{\arabic{section}}
\renewcommand\thesubsection{\thesection.\arabic{subsection}}
\end_preamble
\use_default_options true
\begin_modules
multicol
sectionbox
theorems-ams
eqs-within-sections
figs-within-sections
algorithm2e
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
\shape smallcaps
\size huge
Artificial Intelligence in Mobile Robots
\series default
\shape default
\size default

\begin_inset Newline newline
\end_inset


\shape smallcaps
\size larger
Lab 5 - Path planning
\end_layout

\begin_layout Author
By
\emph on
 Tobias L 
\emph default
&
\emph on
 Özgun M
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph default
Lab Assistant
\emph on
 Ali Abdul Khaliq
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph default
Örebro University
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\size larger
\bar under
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\size larger
\bar under
Student info
\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\size larger
\bar under
Student information
\end_layout

\begin_layout Plain Layout
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Tobias Lindvall
\end_layout

\begin_layout Plain Layout
870603-6657
\end_layout

\begin_layout Plain Layout
tobiaslindwall@gmail.com
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Özgun Mirtchev
\end_layout

\begin_layout Plain Layout
920321-2379
\end_layout

\begin_layout Plain Layout
ozgun.mirtchev@gmail.com
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\size default
\bar default

\begin_inset Float table
placement b
wide false
sideways false
status open

\begin_layout Plain Layout

\size largest
Report handed in: 2016-10-07
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
The objectives of this lab is to implement and test a search algorithm which
 will be used for path planning to be used by the ePuck.
 To be able to move from a start position to a goal position a set of problems
 needs to be solved, specifically which paths are allowed to be taken and
 at the same time avoiding obstacles along the way.
 Ultimately the end goal is to find the closest path between the start and
 the goal.
 The algorithm which is going to be used specifically for this lab is Breadth-Fi
rst Search (BFS).
 BFS searches a space by layers and moves outwards from the goal to the
 start position, while at the same marking the spaces it has found and how
 many steps are required to get to a specific point in the space.
 The specific functions which are going to be implemented are Search() (BFS),
 MarkCell() and Plan() (Backtracking to find a path).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
-State lab objectives, and overview.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Tasks
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
-Explain what you did, and how you did it.
 
\end_layout

\begin_layout Plain Layout
-This section should explain what was done for EACH POINT of the lab assignment.
\end_layout

\begin_layout Plain Layout
-In particular, indicate which sections refer to optional parts.
 Indicate which optional parts were done, and how.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Task 1 - Implement Search() and MarkCell() 
\end_layout

\begin_layout Itemize
Pseudo code for both the Search() and MarkCell() procedures was given in
 the lecture slides.
 This pseudo code was used for implementing the functions into the source
 code.
 
\end_layout

\begin_layout Itemize
For modelling the virtual room where the Search() procedure were to be applied,
 some data structure was needed.
 At first, a simple 2D array (int map[i][j]) was used where 
\begin_inset Quotes eld
\end_inset

i
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

j
\begin_inset Quotes erd
\end_inset

 describe the coordinate of a node and the int value of the element describes
 the node's state.
 This array was later replaced by the structure 
\begin_inset Quotes eld
\end_inset

Map
\begin_inset Quotes erd
\end_inset

 that was given in the base code.
 
\end_layout

\begin_layout Itemize
For holding the adjacent nodes that were to be marked with info and eventually
 explored, the structure 
\begin_inset Quotes eld
\end_inset

List
\begin_inset Quotes erd
\end_inset

 was used.
\end_layout

\begin_layout Standard
Code for this task can be found in appendix: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{SearchMarkCell}{Search and MarkCell}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Task 2 - Map and Search()-simulating
\end_layout

\begin_layout Standard
Three different maps were used for testing Search().
 The maps were expressed in a text file and read into the program by the
 function CreateMapFromFile().
 The Search() results were saved by using the function SaveMapToFile().
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
1st map
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map2_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
First map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map2_search_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Searched first map
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
2nd map
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map3_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Second map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map3_search_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Searched second map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
3rd map
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map1_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Third map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map1_search_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Searched third map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Task 3 - Implement Plan()
\end_layout

\begin_layout Standard
The Plan() procedure was also implemented with help from pseudo code that
 was given in the lecture slides.
\end_layout

\begin_layout Standard
Code for this task can be found in appendix: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperlink{Plan}{Plan}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Task 4 - Map and Plan()-simulating
\end_layout

\begin_layout Standard
The three maps from Task 2 were used here as well.
 The Plan() function was modified to write the chosen path to the map, expressed
 as 
\begin_inset Quotes eld
\end_inset

*
\begin_inset Quotes erd
\end_inset

.
 Time measurements was also done to see difference from one map to another.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map2_plan_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Planned first map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map3_plan_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Planned second map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename maps/img/map1_plan_img.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Planned third map
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Subsubsection
Search 
\end_layout

\begin_layout Standard
When we tried to implement the Search-function, the first problem we encountered
 was to choose a map to be used to represent the grid on which the ePuck
 was going to calculate the path on.
 Our first solution was to use a simple 2D array, which would display the
 values of the cells.
 This worked out to be good, but we realised that using the Map from the
 maps.h library file was a better idea, since it had some convenient functions
 that could be used to manipulate the map.
 
\end_layout

\begin_layout Standard
The implementation of the Search-function was otherwise fairly straight-forward
 and was done fast.
 
\end_layout

\begin_layout Subsubsection
Plan
\end_layout

\begin_layout Standard
Implementing the Plan-function from pseudo-code was also straight-forward.
 It works well and gives a path with the minimum possible steps to reach
 a goal.
 
\end_layout

\begin_layout Standard
We also decided to measure the time it takes for the Plan-function to compute
 a path.
 It was purely out of interest and was not a required task.
\end_layout

\begin_layout Itemize
First map: ~3.16 s
\end_layout

\begin_layout Itemize
Second map: ~2.63 s
\end_layout

\begin_layout Itemize
Third map: ~2.48 s
\end_layout

\begin_layout Standard
If we look at the times and compare them with the structure of each map,
 a possible conclusion would be that the more obstacles a map has, the less
 time it takes for the algorithm to find a path.
 Vice versa, it also takes longer to find a path if there are more nodes
 to search.
 This is evident if you look at the difference between the third map which
 has many more obstacles than the first map.
 Notice that we used a 20 ms delay in our search loop.
 The reason for this is that we wanted to print the map while searching
 and the delay made it possible to follow the progress visually.
 This causes the times to have abnormally high values, but still comparable
 to each other.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
-Explain problems encountered and solutions used (don't mention pure programming
 problems or hardware problems).
 
\end_layout

\begin_layout Plain Layout
-Explain how well the resulting program worked, and how it might be improved.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\start_of_appendix
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{SearchMarkCell}{Search and MarkCell}
\end_layout

\end_inset


\begin_inset listings
lstparams "language=C"
inline false
status open

\begin_layout Plain Layout

void MarkCell(int i, int j, int value)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    Cell c = {i, j, 0.0};
\end_layout

\begin_layout Plain Layout

    switch (map[i][j])
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    case -1: // Initial position
\end_layout

\begin_layout Plain Layout

        Push(&TheQueue, c);
\end_layout

\begin_layout Plain Layout

        break;
\end_layout

\begin_layout Plain Layout

    case -2: // Unexplored c
\end_layout

\begin_layout Plain Layout

        map[i][j] = value;
\end_layout

\begin_layout Plain Layout

        Push(&TheQueue, c);
\end_layout

\begin_layout Plain Layout

        break;
\end_layout

\begin_layout Plain Layout

    case -3: // Obstacle
\end_layout

\begin_layout Plain Layout

        break;
\end_layout

\begin_layout Plain Layout

    case -4: // Out of boundaries
\end_layout

\begin_layout Plain Layout

        break;
\end_layout

\begin_layout Plain Layout

    default: // Already explored
\end_layout

\begin_layout Plain Layout

        break;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void Search(Cell start, Cell goal)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    ClearList(&TheQueue, FIFO);
\end_layout

\begin_layout Plain Layout

    Push(&TheQueue, goal);
\end_layout

\begin_layout Plain Layout

    while (!IsListEmpty(&TheQueue))
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        Cell current = Pop(&TheQueue);
\end_layout

\begin_layout Plain Layout

        if (current.i == start.i && current.j == start.j)
\end_layout

\begin_layout Plain Layout

            break;
\end_layout

\begin_layout Plain Layout

        int dist = map[current.i][current.j] + 1;
\end_layout

\begin_layout Plain Layout

        MarkCell(current.i, current.j - 1, dist);
\end_layout

\begin_layout Plain Layout

        MarkCell(current.i, current.j + 1, dist);
\end_layout

\begin_layout Plain Layout

        MarkCell(current.i - 1, current.j, dist);
\end_layout

\begin_layout Plain Layout

        MarkCell(current.i + 1, current.j, dist);
\end_layout

\begin_layout Plain Layout

        PrintMap(&TheMap);
\end_layout

\begin_layout Plain Layout

        Sleep(20);			
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hypertarget{Plan}{Plan}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=C"
inline false
status open

\begin_layout Plain Layout

void Plan(Cell start, Cell goal)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    Search(start, goal);
\end_layout

\begin_layout Plain Layout

    Cell curr = start;
\end_layout

\begin_layout Plain Layout

    Cell next;
\end_layout

\begin_layout Plain Layout

    int it = 0;
\end_layout

\begin_layout Plain Layout

    printf("(%d, %d)
\backslash
n", curr.i, curr.j);
\end_layout

\begin_layout Plain Layout

    do
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        next = GetNextNode(curr);			// Extracted into a function because
 of readability
\end_layout

\begin_layout Plain Layout

        printf("(%d, %d) (%d)
\backslash
n", next.i, next.j, map[next.i][next.j]);
\end_layout

\begin_layout Plain Layout

        if (it)
\end_layout

\begin_layout Plain Layout

            map[curr.i][curr.j] = -6;		// Marks the path on the map with "*"
\end_layout

\begin_layout Plain Layout

        PathCoords[it] = next;			   // Saves the path to global array
\end_layout

\begin_layout Plain Layout

		it++;						
\end_layout

\begin_layout Plain Layout

        curr = next;
\end_layout

\begin_layout Plain Layout

    } while (map[curr.i][curr.j] != 0);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
